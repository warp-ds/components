import{j as e}from"./jsx-runtime-D_zvdyIk.js";import{r as o}from"./index-BKyFwriW.js";import{s as Re,H as we}from"./HelpText-D3rZRzqx.js";import{i as _e}from"./index-BAUi5aDK.js";import{a as Ne}from"./i18n-BcvZsnG8.js";import"./_commonjsHelpers-CqkleIqs.js";import"./index-FGJkmGnF.js";function Se({ref:t,value:n,minimumRows:i,maximumRows:l}){const c=o.useRef(Number.NEGATIVE_INFINITY),_=o.useRef(Number.POSITIVE_INFINITY),d=n!==void 0;function N(a){a.style.setProperty("height","auto");let s=Math.max(c.current,a.scrollHeight);s=Math.min(_.current,s),a.style.setProperty("height",s+"px")}o.useLayoutEffect(()=>{if(t.current&&(i||l)){const a=getComputedStyle(t.current),s=Number.parseFloat(a.getPropertyValue("line-height")),q=Number.parseFloat(a.getPropertyValue("padding-top")),S=Number.parseFloat(a.getPropertyValue("padding-bottom")),D=Number.parseFloat(a.getPropertyValue("border-bottom-width")),E=q+S+D;i&&(c.current=s*i+E),l&&(_.current=s*l+E)}},[t,l,i]),o.useLayoutEffect(()=>{t.current&&N(t.current)},[t,n]),o.useEffect(()=>{if(!t.current&&d)return;const a=t.current,s=()=>{N(a)};return a.addEventListener("input",s),()=>a.removeEventListener("input",s)},[t,d])}const Ee=JSON.parse('{"textarea.label.optional":["(valgfrit)"]}'),Ae=JSON.parse('{"textarea.label.optional":["(optional)"]}'),Ie=JSON.parse('{"textarea.label.optional":["(valinnainen)"]}'),qe=JSON.parse('{"textarea.label.optional":["(valgfritt)"]}'),De=JSON.parse('{"textarea.label.optional":["(valfritt)"]}');Ne(Ae,qe,Ie,Ee,De);function r(t){const{ref:n,className:i="",disabled:l=!1,helpText:c,invalid:_=!1,label:d,maximumRows:N,minimumRows:a,readOnly:s=!1,style:q,value:S,optional:D=!1,placeholder:E,...be}=t,H=o.useId(),ye=o.useRef(null),F=n&&"current"in n?n:ye,A=c?`${H}__hint`:void 0,I=_;Se({ref:F,value:S,maximumRows:N,minimumRows:a});const ve=["w-textarea",l&&"w-textarea--disabled",I&&"w-textarea--invalid",s&&"w-textarea--readonly",i].filter(Boolean).join(" ");return e.jsxs(e.Fragment,{children:[e.jsx("style",{href:"TextArea",precedence:"medium",children:Re}),e.jsxs("div",{className:ve,style:q,children:[d&&e.jsxs("label",{htmlFor:H,className:"w-textarea__label",children:[d,D&&e.jsx("span",{className:"w-textarea__label--optional",children:_e._({id:"textarea.label.optional",message:"(optional)",comment:"Shown behind label when marked as optional"})})]}),e.jsx("textarea",{id:H,ref:F,className:"w-textarea__field",placeholder:E,"aria-describedby":A,"aria-errormessage":I&&A?A:void 0,"aria-invalid":I,disabled:l,readOnly:s,value:S,...be}),c&&e.jsx(we,{helpId:A,helpText:c,isInvalid:I})]})]})}r.__docgenInfo={description:"",methods:[],displayName:"TextArea",props:{autoFocus:{required:!1,tsType:{name:"boolean"},description:"Whether the element should receive focus on render."},className:{required:!1,tsType:{name:"string"},description:"Additional CSS class for the container"},defaultValue:{required:!1,tsType:{name:"string"},description:"The default value (uncontrolled)."},disabled:{required:!1,tsType:{name:"boolean"},description:"Whether the input is disabled."},invalid:{required:!1,tsType:{name:"boolean"},description:"Renders the field in an invalid state. Often paired together with `helpText` to provide feedback about the error."},helpText:{required:!1,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:"The content to display as the help text."},id:{required:!1,tsType:{name:"string"},description:"The element's unique identifier. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/id)."},label:{required:!1,tsType:{name:"string"},description:"The content to display as the label."},onBlur:{required:!1,tsType:{name:"signature",type:"function",raw:"(e: React.FocusEvent<HTMLTextAreaElement>) => void",signature:{arguments:[{type:{name:"ReactFocusEvent",raw:"React.FocusEvent<HTMLTextAreaElement>",elements:[{name:"HTMLTextAreaElement"}]},name:"e"}],return:{name:"void"}}},description:"Handler that is called when the element loses focus."},onChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(e: React.ChangeEvent<HTMLTextAreaElement>) => void",signature:{arguments:[{type:{name:"ReactChangeEvent",raw:"React.ChangeEvent<HTMLTextAreaElement>",elements:[{name:"HTMLTextAreaElement"}]},name:"e"}],return:{name:"void"}}},description:"Handler that is called when the value changes."},onFocus:{required:!1,tsType:{name:"signature",type:"function",raw:"(e: React.FocusEvent<HTMLTextAreaElement>) => void",signature:{arguments:[{type:{name:"ReactFocusEvent",raw:"React.FocusEvent<HTMLTextAreaElement>",elements:[{name:"HTMLTextAreaElement"}]},name:"e"}],return:{name:"void"}}},description:"Handler that is called when the element receives focus."},maximumRows:{required:!1,tsType:{name:"number"},description:"Maximum number of text rows upto which the input can grow."},minimumRows:{required:!1,tsType:{name:"number"},description:"Minimum number of text rows to show for the input."},name:{required:!1,tsType:{name:"string"},description:"The name of the input element, used when submitting an HTML form. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#htmlattrdefname)."},placeholder:{required:!1,tsType:{name:"string"},description:"Text hint that occupies the text input when it is empty."},readOnly:{required:!1,tsType:{name:"boolean"},description:"Whether the input can be selected but not changed by the user."},required:{required:!1,tsType:{name:"boolean"},description:"Whether user input is required on the input before form submission."},style:{required:!1,tsType:{name:"ReactCSSProperties",raw:"React.CSSProperties"},description:"Additional CSS styles for the container."},value:{required:!1,tsType:{name:"string"},description:"The current value (controlled)."},optional:{required:!1,tsType:{name:"boolean"},description:"Whether to show optional text"},ref:{required:!1,tsType:{name:"ReactRef",raw:"React.Ref<HTMLTextAreaElement>",elements:[{name:"HTMLTextAreaElement"}]},description:"Pass your own ref to the underlying <textarea>"}}};const Oe={title:"Forms/TextArea"},p=()=>e.jsx(r,{label:"Description",helpText:"Hint message"}),m=()=>e.jsx(r,{label:"Description",defaultValue:"Test"}),u=()=>{const[t,n]=o.useState("Test");return e.jsx(r,{label:"Description",value:t,onChange:i=>n(i.target.value),minimumRows:4,maximumRows:6})},h=()=>{const t=o.useRef(null);return o.useEffect(()=>{console.log(t.current)}),e.jsx(r,{label:"Description",defaultValue:"hey",ref:t})},f=()=>e.jsx(r,{label:"Description",required:!0}),x=()=>e.jsx(r,{label:"Description",placeholder:"Lorem ipsum"}),g=()=>e.jsx(r,{label:"Description",readOnly:!0}),T=()=>e.jsx(r,{label:"Description",autoFocus:!0}),b=()=>e.jsx(r,{label:"Description",disabled:!0}),y=()=>e.jsx(r,{label:"Description",invalid:!0,helpText:"Invalid text"}),v=()=>e.jsx(r,{label:"Description",minimumRows:3}),R=()=>e.jsx(r,{label:"Description",maximumRows:3}),w=()=>e.jsx(r,{label:"Description",optional:!0});p.__docgenInfo={description:"",methods:[],displayName:"standard"};m.__docgenInfo={description:"",methods:[],displayName:"valueUncontrolled"};u.__docgenInfo={description:"",methods:[],displayName:"ValueControlled"};h.__docgenInfo={description:"",methods:[],displayName:"TextFieldWithRef"};f.__docgenInfo={description:"",methods:[],displayName:"required"};x.__docgenInfo={description:"",methods:[],displayName:"placeholder"};g.__docgenInfo={description:"",methods:[],displayName:"readOnly"};T.__docgenInfo={description:"",methods:[],displayName:"autoFocus"};b.__docgenInfo={description:"",methods:[],displayName:"disabled"};y.__docgenInfo={description:"",methods:[],displayName:"invalid"};v.__docgenInfo={description:"",methods:[],displayName:"minimumRows3"};R.__docgenInfo={description:"",methods:[],displayName:"maximumRows3"};w.__docgenInfo={description:"",methods:[],displayName:"optional"};var j,L,M;p.parameters={...p.parameters,docs:{...(j=p.parameters)==null?void 0:j.docs,source:{originalSource:'() => <TextArea label="Description" helpText="Hint message" />',...(M=(L=p.parameters)==null?void 0:L.docs)==null?void 0:M.source}}};var V,C,O;m.parameters={...m.parameters,docs:{...(V=m.parameters)==null?void 0:V.docs,source:{originalSource:'() => <TextArea label="Description" defaultValue="Test" />',...(O=(C=m.parameters)==null?void 0:C.docs)==null?void 0:O.source}}};var P,W,J;u.parameters={...u.parameters,docs:{...(P=u.parameters)==null?void 0:P.docs,source:{originalSource:`() => {
  const [value, setValue] = React.useState('Test');
  return <TextArea label="Description" value={value} onChange={e => setValue(e.target.value)} minimumRows={4} maximumRows={6} />;
}`,...(J=(W=u.parameters)==null?void 0:W.docs)==null?void 0:J.source}}};var U,$,z;h.parameters={...h.parameters,docs:{...(U=h.parameters)==null?void 0:U.docs,source:{originalSource:`() => {
  const ref = React.useRef(null);
  React.useEffect(() => {
    console.log(ref.current);
  });
  return <TextArea label="Description" defaultValue="hey" ref={ref} />;
}`,...(z=($=h.parameters)==null?void 0:$.docs)==null?void 0:z.source}}};var B,k,G;f.parameters={...f.parameters,docs:{...(B=f.parameters)==null?void 0:B.docs,source:{originalSource:'() => <TextArea label="Description" required />',...(G=(k=f.parameters)==null?void 0:k.docs)==null?void 0:G.source}}};var Y,K,Q;x.parameters={...x.parameters,docs:{...(Y=x.parameters)==null?void 0:Y.docs,source:{originalSource:'() => <TextArea label="Description" placeholder="Lorem ipsum" />',...(Q=(K=x.parameters)==null?void 0:K.docs)==null?void 0:Q.source}}};var X,Z,ee;g.parameters={...g.parameters,docs:{...(X=g.parameters)==null?void 0:X.docs,source:{originalSource:'() => <TextArea label="Description" readOnly />',...(ee=(Z=g.parameters)==null?void 0:Z.docs)==null?void 0:ee.source}}};var te,ae,re;T.parameters={...T.parameters,docs:{...(te=T.parameters)==null?void 0:te.docs,source:{originalSource:'() => <TextArea label="Description" autoFocus />',...(re=(ae=T.parameters)==null?void 0:ae.docs)==null?void 0:re.source}}};var se,oe,ne;b.parameters={...b.parameters,docs:{...(se=b.parameters)==null?void 0:se.docs,source:{originalSource:'() => <TextArea label="Description" disabled />',...(ne=(oe=b.parameters)==null?void 0:oe.docs)==null?void 0:ne.source}}};var ie,le,ce;y.parameters={...y.parameters,docs:{...(ie=y.parameters)==null?void 0:ie.docs,source:{originalSource:'() => <TextArea label="Description" invalid helpText="Invalid text" />',...(ce=(le=y.parameters)==null?void 0:le.docs)==null?void 0:ce.source}}};var de,pe,me;v.parameters={...v.parameters,docs:{...(de=v.parameters)==null?void 0:de.docs,source:{originalSource:'() => <TextArea label="Description" minimumRows={3} />',...(me=(pe=v.parameters)==null?void 0:pe.docs)==null?void 0:me.source}}};var ue,he,fe;R.parameters={...R.parameters,docs:{...(ue=R.parameters)==null?void 0:ue.docs,source:{originalSource:'() => <TextArea label="Description" maximumRows={3} />',...(fe=(he=R.parameters)==null?void 0:he.docs)==null?void 0:fe.source}}};var xe,ge,Te;w.parameters={...w.parameters,docs:{...(xe=w.parameters)==null?void 0:xe.docs,source:{originalSource:'() => <TextArea label="Description" optional />',...(Te=(ge=w.parameters)==null?void 0:ge.docs)==null?void 0:Te.source}}};const Pe=["standard","valueUncontrolled","ValueControlled","TextFieldWithRef","required","placeholder","readOnly","autoFocus","disabled","invalid","minimumRows3","maximumRows3","optional"];export{h as TextFieldWithRef,u as ValueControlled,Pe as __namedExportsOrder,T as autoFocus,Oe as default,b as disabled,y as invalid,R as maximumRows3,v as minimumRows3,w as optional,x as placeholder,g as readOnly,f as required,p as standard,m as valueUncontrolled};
